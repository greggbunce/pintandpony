@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;
    @each $key, $num in $map {
      @if $prev-num != null and $prev-num >= $num {
        @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
      }
      $prev-key: $key;
      $prev-num: $num;
    }
  }
    
  $grid-breakpoints: (
    xs: 0,
    sm: 544px,
    md: 768px,
    lg: 992px,
    xl: 1200px
  ) !default;
  @include _assert-ascending($grid-breakpoints, "$grid-breakpoints");

@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)){
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints){
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints){
    $next: breakpoint-next($name, $breakpoints);
    @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints){
    $min: breakpoint-min($name, $breakpoints);
    @if $min{
        @media screen and (min-width: $min){
            @content;
        }
    } @else{
        @content;
    }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints){
    $max: breakpoint-max($name, $breakpoints);
    @if $max{
        @media screen and (max-width: $max){
            @content;
        }
    } @else{
        @content;
    }
}

@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints){
    @include media-breakpoint-up($name, $breakpoints){
        @include media-breakpoint-down($name, $breakpoints){
            @content;
        }
    }
}

@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints){
    @include media-breakpoint-up($lower, $breakpoints){
        @include media-breakpoint-down($upper, $breakpoints){
            @content;
        }
    }
}